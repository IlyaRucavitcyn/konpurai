{
	"info": {
		"_postman_id": "verifywise-complete-api-v1",
		"name": "VerifyWise Complete API Collection",
		"description": "Comprehensive API collection for VerifyWise platform covering all endpoints including authentication, projects, compliance frameworks, risk management, and more.\n\nIMPORTANT FIELD NOTES:\n- User fields: name, surname, email, password, roleId, organizationId\n- Project fields: project_title, goal, owner, start_date, framework (REQUIRED), ai_risk_classification, type_of_high_risk_role, is_organizational, enable_ai_data_insertion\n- Vendor fields: vendor_name, vendor_provides, assignee, website, vendor_contact_person, review_result, review_status, reviewer, review_date\n- Password must contain: uppercase, lowercase, number, special character, 8-20 chars\n- AI Risk Classification: 'Prohibited', 'High Risk', 'Limited Risk', 'Minimal Risk'\n- High Risk Role: 'AI System Provider', 'AI System Deployer', 'Distributor', 'Product Manufacturer', 'Importer', 'Authorized Representative'\n- Vendor Review Status: 'Not started', 'In review', 'Reviewed', 'Requires follow-up'\n- Framework IDs: [1=EU AI Act, 2=ISO 42001, 3=ISO 27001]\n- Organizational projects: framework=[2], [3], or [2,3], ai_risk_classification=null, type_of_high_risk_role=null\n- AI projects: framework=[1] only, ai_risk_classification required, type_of_high_risk_role required",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John\",\n    \"surname\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePass123!\",\n    \"roleId\": 1,\n    \"organizationId\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/register",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "register"]
						}
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"pm.environment.set(\"jwt_token\", response.data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"securePassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/login",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "login"]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/refresh-token",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "refresh-token"]
						}
					}
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\"\n,\"newPassword\": \"NewSecurePass456!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/reset-password",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "reset-password"]
						}
					}
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": ["{{base_url}}"],
							"path": ["api", "users"]
						}
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "{{user_id}}"]
						}
					}
				},
				{
					"name": "Get User by Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/by-email/{{user_email}}",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "by-email", "{{user_email}}"]
						}
					}
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated John\",\n    \"surname\": \"Updated Doe\",\n    \"email\": \"updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "{{user_id}}"]
						}
					}
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"SecurePass123!\",\n    \"newPassword\": \"NewSecurePass456!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/chng-pass/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "chng-pass", "{{user_id}}"]
						}
					}
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "{{user_id}}"]
						}
					}
				},
				{
					"name": "Check User Exists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/check/exists",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "check", "exists"]
						}
					}
				},
				{
					"name": "Calculate User Progress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}/calculate-progress",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "{{user_id}}", "calculate-progress"]
						}
					}
				}
			]
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Check Organization Exists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/organizations/exists",
							"host": ["{{base_url}}"],
							"path": ["api", "organizations", "exists"]
						}
					}
				},
				{
					"name": "Create Organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sample Organization\",\n    \"logo\": \"https://example.com/logo.png\",\n    \"userEmail\": \"admin@example.com\",\n    \"userName\": \"Admin\",\n    \"userSurname\": \"User\",\n    \"userPassword\": \"AdminPass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/organizations",
							"host": ["{{base_url}}"],
							"path": ["api", "organizations"]
						}
					}
				},
				{
					"name": "Get Organization by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/organizations/{{org_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "organizations", "{{org_id}}"]
						}
					}
				},
				{
					"name": "Update Organization",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Organization Name\",\n    \"logo\": \"https://example.com/updated-logo.png\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/organizations/{{org_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "organizations", "{{org_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Get All Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": ["{{base_url}}"],
							"path": ["api", "projects"]
						}
					}
				},
				{
					"name": "Get Project by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store created project ID for other requests",
									"var response = pm.response.json();",
									"if (response.data && response.data.project && response.data.project.id) {",
									"    pm.environment.set(\"project_id\", response.data.project.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project_title\": \"AI Risk Assessment Project\",\n    \"goal\": \"Comprehensive assessment and management of AI-related risks in our organization\",\n    \"owner\": {{user_id}},\n    \"start_date\": \"2024-01-01\",\n    \"ai_risk_classification\": \"High Risk\",\n    \"type_of_high_risk_role\": \"AI System Provider\",\n    \"is_organizational\": false,\n    \"framework\": [1],\n    \"enable_ai_data_insertion\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": ["{{base_url}}"],
							"path": ["api", "projects"]
						},
						"description": "Create an AI-related project with EU AI Act framework only. For AI projects, ai_risk_classification and type_of_high_risk_role are required."
					},
					"response": []
				},
				{
					"name": "Create Organizational Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store created project ID for other requests",
									"var response = pm.response.json();",
									"if (response.data && response.data.project && response.data.project.id) {",
									"    pm.environment.set(\"org_project_id\", response.data.project.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project_title\": \"ISO Compliance Project\",\n    \"goal\": \"Achieve ISO 42001 and ISO 27001 certification for organizational compliance\",\n    \"owner\": {{user_id}},\n    \"start_date\": \"2024-01-01\",\n    \"is_organizational\": true,\n    \"framework\": [2, 3],\n    \"enable_ai_data_insertion\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": ["{{base_url}}"],
							"path": ["api", "projects"]
						},
						"description": "Create an organizational project with ISO 42001 and ISO 27001 frameworks. For organizational projects, ai_risk_classification and type_of_high_risk_role must be null."
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project_title\": \"Updated AI Risk Assessment Project\",\n    \"goal\": \"Updated comprehensive assessment and management goals\",\n    \"ai_risk_classification\": \"Minimal Risk\",\n    \"type_of_high_risk_role\": \"Distributor\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Project Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/stats/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "stats", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Calculate Project Risks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/calculateProjectRisks/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "calculateProjectRisks", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Calculate Vendor Risks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/calculateVendorRisks/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "calculateVendorRisks", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Project Compliances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/complainces/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "complainces", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Project Compliance Progress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/compliance/progress/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "compliance", "progress", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Project Assessment Progress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/assessment/progress/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "projects", "assessment", "progress", "{{project_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "EU AI Act",
			"item": [
				{
					"name": "Get All Control Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/controlCategories",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "controlCategories"]
						}
					}
				},
				{
					"name": "Get Controls by Category ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/controls/byControlCategoryId/{{category_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "controls", "byControlCategoryId", "{{category_id}}"]
						}
					}
				},
				{
					"name": "Get All Topics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/topics",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "topics"]
						}
					}
				},
				{
					"name": "Get Assessments by Project ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/assessments/byProjectId/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "assessments", "byProjectId", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Compliances by Project ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/compliances/byProjectId/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "compliances", "byProjectId", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Project Compliance Progress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/compliances/progress/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "compliances", "progress", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Project Assessment Progress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/assessments/progress/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "assessments", "progress", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Save Controls",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "controls",
									"value": "[{\"controlId\": 1, \"status\": \"completed\", \"notes\": \"Control implemented\"}]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/saveControls/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "saveControls", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Save Answer",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"answer\": \"Yes, the AI system has been thoroughly tested\",\n    \"status\": \"completed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/eu-ai-act/saveAnswer/{{answer_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "eu-ai-act", "saveAnswer", "{{answer_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "Assessments",
			"item": [
				{
					"name": "Get All Assessments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/assessments",
							"host": ["{{base_url}}"],
							"path": ["api", "assessments"]
						}
					}
				},
				{
					"name": "Get Assessment by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/assessments/{{assessment_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "assessments", "{{assessment_id}}"]
						}
					}
				},
				{
					"name": "Get Assessment by Project ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/assessments/project/byid/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "assessments", "project", "byid", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Get Assessment Answers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/assessments/getAnswers/{{assessment_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "assessments", "getAnswers", "{{assessment_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "Vendors",
			"item": [
				{
					"name": "Get All Vendors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/vendors",
							"host": ["{{base_url}}"],
							"path": ["api", "vendors"]
						}
					}
				},
				{
					"name": "Get Vendor by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/vendors/{{vendor_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vendors", "{{vendor_id}}"]
						}
					}
				},
				{
					"name": "Get Vendor by Project ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/vendors/project-id/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vendors", "project-id", "{{project_id}}"]
						}
					}
				},
				{
					"name": "Create Vendor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vendor_name\": \"Amazon Web Services\",\n    \"vendor_provides\": \"Cloud computing services and AI/ML infrastructure\",\n    \"assignee\": {{user_id}},\n    \"website\": \"https://aws.amazon.com\",\n    \"vendor_contact_person\": \"John Smith\",\n    \"review_result\": \"Initial assessment pending\",\n    \"review_status\": \"Not started\",\n    \"reviewer\": {{user_id}},\n    \"review_date\": \"2024-01-15\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/vendors",
							"host": ["{{base_url}}"],
							"path": ["api", "vendors"]
						}
					}
				},
				{
					"name": "Update Vendor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vendor_name\": \"Updated Amazon Web Services\",\n    \"vendor_provides\": \"Updated cloud computing services description\",\n    \"website\": \"https://aws.amazon.com/updated\",\n    \"vendor_contact_person\": \"Jane Doe\",\n    \"review_result\": \"Updated assessment results\",\n    \"review_status\": \"In review\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/vendors/{{vendor_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vendors", "{{vendor_id}}"]
						}
					}
				},
				{
					"name": "Delete Vendor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/vendors/{{vendor_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "vendors", "{{vendor_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "Vendor Risks",
			"item": [
				{
					"name": "Get All Vendor Risks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/vendorRisks",
							"host": ["{{base_url}}"],
							"path": ["api", "vendorRisks"]
						}
					}
				},
				{
					"name": "Create Vendor Risk",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vendor_id\": {{vendor_id}},\n    \"risk_type\": \"Data Security\",\n    \"risk_level\": \"High\",\n    \"risk_description\": \"Risk related to data security practices\",\n    \"mitigation_plan\": \"Implement additional security measures\",\n    \"status\": \"Open\",\n    \"likelihood\": \"Medium\",\n    \"impact\": \"High\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/vendorRisks",
							"host": ["{{base_url}}"],
							"path": ["api", "vendorRisks"]
						}
					}
				}
			]
		},
		{
			"name": "Questions",
			"item": [
				{
					"name": "Get All Questions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/questions",
							"host": ["{{base_url}}"],
							"path": ["api", "questions"]
						}
					}
				}
			]
		},
		{
			"name": "Project Risks",
			"item": [
				{
					"name": "Get Project Risks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projectRisks",
							"host": ["{{base_url}}"],
							"path": ["api", "projectRisks"]
						}
					}
				}
			]
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Get All Roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/roles",
							"host": ["{{base_url}}"],
							"path": ["api", "roles"]
						}
					}
				}
			]
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "Upload File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "projectId",
									"value": "{{project_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/files/upload",
							"host": ["{{base_url}}"],
							"path": ["api", "files", "upload"]
						}
					}
				}
			]
		},
		{
			"name": "Mail",
			"item": [
				{
					"name": "Send Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"to\": \"recipient@example.com\",\n    \"subject\": \"Test Email\",\n    \"message\": \"This is a test email from VerifyWise\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mail/send",
							"host": ["{{base_url}}"],
							"path": ["api", "mail", "send"]
						}
					}
				}
			]
		},
		{
			"name": "Frameworks",
			"item": [
				{
					"name": "Get All Frameworks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/frameworks",
							"host": ["{{base_url}}"],
							"path": ["api", "frameworks"]
						}
					}
				}
			]
		},
		{
			"name": "ISO 42001",
			"item": [
				{
					"name": "Get ISO 42001 Structure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/iso-42001/structure",
							"host": ["{{base_url}}"],
							"path": ["api", "iso-42001", "structure"]
						}
					}
				}
			]
		},
		{
			"name": "ISO 27001",
			"item": [
				{
					"name": "Get ISO 27001 Structure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/iso-27001/structure",
							"host": ["{{base_url}}"],
							"path": ["api", "iso-27001", "structure"]
						}
					}
				}
			]
		},
		{
			"name": "Training",
			"item": [
				{
					"name": "Get Training Records",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/training",
							"host": ["{{base_url}}"],
							"path": ["api", "training"]
						}
					}
				}
			]
		},
		{
			"name": "AI Trust Centre",
			"item": [
				{
					"name": "Get AI Trust Centre Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/aiTrustCentre",
							"host": ["{{base_url}}"],
							"path": ["api", "aiTrustCentre"]
						}
					}
				}
			]
		},
		{
			"name": "Reporting",
			"item": [
				{
					"name": "Generate Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/reporting/generate/{{project_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "reporting", "generate", "{{project_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "Get Dashboard Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/dashboard",
							"host": ["{{base_url}}"],
							"path": ["api", "dashboard"]
						}
					}
				}
			]
		},
		{
			"name": "Model Inventory",
			"item": [
				{
					"name": "Get Model Inventory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/modelInventory",
							"host": ["{{base_url}}"],
							"path": ["api", "modelInventory"]
						}
					}
				}
			]
		},
		{
			"name": "Model Risks",
			"item": [
				{
					"name": "Get Model Risks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/modelRisks",
							"host": ["{{base_url}}"],
							"path": ["api", "modelRisks"]
						}
					}
				}
			]
		},
		{
			"name": "Tiers & Subscriptions",
			"item": [
				{
					"name": "Get All Tiers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tiers",
							"host": ["{{base_url}}"],
							"path": ["api", "tiers"]
						}
					}
				},
				{
					"name": "Get All Subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/subscriptions",
							"host": ["{{base_url}}"],
							"path": ["api", "subscriptions"]
						}
					}
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get All Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						}
					}
				}
			]
		},
		{
			"name": "Auto Drivers",
			"item": [
				{
					"name": "Get Auto Drivers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/autoDrivers",
							"host": ["{{base_url}}"],
							"path": ["api", "autoDrivers"]
						}
					}
				}
			]
		},
		{
			"name": "Policies",
			"item": [
				{
					"name": "Get All Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/policies",
							"host": ["{{base_url}}"],
							"path": ["api", "policies"]
						}
					}
				}
			]
		},
		{
			"name": "Logger",
			"item": [
				{
					"name": "Get Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logger/logs",
							"host": ["{{base_url}}"],
							"path": ["api", "logger", "logs"]
						}
					}
				}
			]
		},
		{
			"name": "Slack Webhooks",
			"item": [
				{
					"name": "Slack Webhook Endpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Test message from VerifyWise\",\n    \"channel\": \"#general\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/slackWebhooks/webhook",
							"host": ["{{base_url}}"],
							"path": ["api", "slackWebhooks", "webhook"]
						}
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"description": "Base URL for the VerifyWise API server"
		},
		{
			"key": "jwt_token",
			"value": "your_jwt_token_here",
			"description": "JWT token for authentication - get this from login endpoint"
		},
		{
			"key": "refresh_token",
			"value": "your_refresh_token_here",
			"description": "Refresh token for renewing JWT token"
		},
		{
			"key": "user_id",
			"value": "1",
			"description": "User ID for testing endpoints"
		},
		{
			"key": "user_email",
			"value": "test@example.com",
			"description": "User email for testing endpoints"
		},
		{
			"key": "org_id",
			"value": "1",
			"description": "Organization ID for testing endpoints"
		},
		{
			"key": "project_id",
			"value": "1",
			"description": "AI Project ID for testing endpoints"
		},
		{
			"key": "org_project_id",
			"value": "2",
			"description": "Organizational Project ID for testing endpoints"
		},
		{
			"key": "vendor_id",
			"value": "1",
			"description": "Vendor ID for testing endpoints"
		},
		{
			"key": "assessment_id",
			"value": "1",
			"description": "Assessment ID for testing endpoints"
		},
		{
			"key": "category_id",
			"value": "1",
			"description": "Control category ID for testing endpoints"
		},
		{
			"key": "answer_id",
			"value": "1",
			"description": "Answer ID for testing endpoints"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
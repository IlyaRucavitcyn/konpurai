# Blue-Green Deployment Nginx Configuration
# Health-based load balancing with automatic failover

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_addr=$upstream_addr '
                    'upstream_status=$upstream_status '
                    'request_time=$request_time '
                    'upstream_response_time=$upstream_response_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Upstream definitions with health checks
    upstream backend_blue {
        server backend-blue:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream backend_green {
        server backend-green:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Map to determine active backend based on state file
    # Default to blue if no state file exists
    map $http_host $backend_pool {
        default backend_blue;
    }

    # Include active environment configuration
    include /etc/nginx/state/active_environment.conf;

    # Health check server for internal monitoring
    server {
        listen 8080;
        server_name localhost;

        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location /backend-health {
            access_log off;
            proxy_pass http://$backend_pool/health;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
        }
    }

    # Main application server
    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # Rate limiting for API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;

            # Health check endpoint bypass
            location /api/health {
                limit_req off;
                proxy_pass http://$backend_pool;
                include /etc/nginx/conf.d/proxy_params.conf;
            }

            # Regular API endpoints
            proxy_pass http://$backend_pool;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # Health check endpoint for load balancer
        location /health {
            access_log off;
            proxy_pass http://$backend_pool/health;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;

            # Custom headers for health checks
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Health-Check "true";
        }

        # Circuit breaker endpoints (admin only)
        location /health/circuit-breakers {
            # Add IP restriction if needed
            # allow 10.0.0.0/8;
            # deny all;

            proxy_pass http://$backend_pool;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # All other requests
        location / {
            proxy_pass http://$backend_pool;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
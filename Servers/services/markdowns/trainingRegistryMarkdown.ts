/**
 * Generates a markdown report for training registry
 * @param tenant - The tenant identifier for the organization
 * @param data - Project metadata including organization name and owner
 * @returns Promise<string> - Markdown formatted training registry report
 */

import { ReportBodyData } from "../reportService";
import { getAllTrainingRegistarQuery } from "../../utils/trainingRegistar.utils";

export async function getTrainingRegistryMarkdown(
    data: ReportBodyData,
    tenant: string
): Promise<string> {
    const trainingRegistryReportData = await getTrainingRegistryReportData(tenant);

    const markdown = `
${data.organizationName || "VerifyWise"} training registry report
========================

This report is generated by the VerifyWise Training Registry. It aims to provide a way to demonstrate all training modules within your organization.

- **Date** ${new Date().toLocaleDateString()}
- **Owner** ${data.projectOwner}

${trainingRegistryReportData}
`;
    return markdown;
}

export async function getTrainingRegistryReportData(
    tenant: string
): Promise<string> {
    let trainingRegistryRows: string = ``;
    try {
        const trainingRegistryData = await getAllTrainingRegistarQuery(tenant);
        trainingRegistryRows = trainingRegistryData.map((trainingRegistry) => {
            return `| ${trainingRegistry.training_name} | ${trainingRegistry.duration} | ${trainingRegistry.provider} | ${trainingRegistry.department} | ${trainingRegistry.status} | ${trainingRegistry.numberOfPeople} |`;
        }).join("\n");
    } catch (error) {
        throw new Error(`Error while fetching the training registry report data`);
    }

    return `
Training registry table
-------------
| Training Name | Duration | Provider | Department | Status | People |
|----|----|----|----|----|----|
${trainingRegistryRows}
`;
}
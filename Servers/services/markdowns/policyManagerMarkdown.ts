/**
 * Generates a markdown report for policy manager
 * @param tenant - The tenant identifier for the organization
 * @param data - Project metadata including organization name and owner
 * @returns Promise<string> - Markdown formatted policy manager report
 */

import { ReportBodyData } from "../reportService";
import { getAllPoliciesQuery } from "../../utils/policyManager.utils";

export async function getPolicyManagerMarkdown(
    data: ReportBodyData,
    tenant: string
): Promise<string> {
    const policyManagerReportData = await getPolicyManagerReportData(tenant);

    const markdown = `
${data.organizationName || "VerifyWise"} policy manager report
========================

This report is generated by the VerifyWise Policy Manager. It aims to provide a way to demonstrate all policies within your organization.

- **Date** ${new Date().toLocaleDateString()}
- **Owner** ${data.projectOwner}

${policyManagerReportData}
`;
    return markdown;
}

export async function getPolicyManagerReportData(
    tenant: string
): Promise<string> {
    let policyManagerRows: string = ``;
    try {
        const policyManagerData = await getAllPoliciesQuery(tenant);
        policyManagerRows = policyManagerData.map((policyManager) => {
            return `| ${policyManager.title} | ${policyManager.status} | ${policyManager.next_review_date?.toLocaleDateString()} |`;
        }).join("\n");
    } catch (error) {
        throw new Error(`Error while fetching the policy manager report data`);
    }
    return `
Policy manager table
-------------
| Title | Status | Next Review Date |
|----|----|----|
${policyManagerRows}
`;
}